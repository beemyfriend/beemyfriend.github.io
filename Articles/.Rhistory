urls <- kata_page %>%
html_nodes('.item-title a') %>%
html_text()
urls
urls <- kata_page %>%
html_nodes('.item-title a') %>%
html_attr('href')
urls
urls <- kata_page %>%
html_nodes('.item-title a') %>%
html_attr('href')
urls
pJS <- phantom()
sys.sleep(5)
remDr <- remoteDriver(browserName = 'phantomjs')
remDr$open()
remDr$navigate('http://www.codewars.com/kata')
webElem <- remDr$findElement(using = 'class', 'item-title')
webElem <- remDr$findElement(using = 'css', '.item-title a')
webElem$getElementText
webElem$getElementText()
webElem <- remDr$findElements(using = 'css', '.item-title a')
webElem$getElementText()
webElem
webElem %>% dim()
webElem %>% names()
webElem
webElem[[1]]
webElem[[1]]$getElementAttribute('href')
str(webElem)
?lapply
x <- sapply(webElem, function(x){x$getElementAttribute('href')})
x
x <- sapply(webElem, function(x){x$getElementAttribute('href')}) %>% unlist()
x
tot_kata = 5530/30
webElem <- remDr$findElement(using = 'css', '.is-gray-text')
webElem$getElementText
webElem$getElementText()
tot_kata <- remDr$findElement(using = 'css', '.is-gray-text') %>%
.$getElementText() %>%
unlist()
tot_kata <- remDr$findElement(using = 'css', '.is-gray-text') %>%
.$getElementText %>%
unlist()
tot_kata
tot_kata <- remDr$findElement(using = 'css', '.is-gray-text') %>%
.$getElementText() %>%
unlist()
webElem <- remDr$findElement(using = 'css', '.is-gray-text')
webElem$getElementText()
tot_kata <- remDr$findElement(using = 'css', '.is-gray-text')$getElementText() %>%
unlist()
tot_kata
library(stringr)
tot_kata <- remDr$findElement(using = 'css', '.is-gray-text')$getElementText() %>%
unlist() %>%
str_extract('\\d+')
tot_kata
tot_kata <- remDr$findElement(using = 'css', '.is-gray-text')$getElementText() %>%
unlist() %>%
str_extract('\\d+') %>%
as.numeric()
tot_kata
tot_kata /30
tot_pages <- tot_kata/30 %>%
ceiling()
tot_pages
tot_pages <- tot_kata/30 %>%
ceiling(0)
ceiling(185.33)
tot_pages <- (tot_kata/30) %>%
ceiling()
tot_pages
for(i in 1:3){
remDr$executeScript(paste('scroll(0,', i*10000, ');'))
Sys.sleep(3)
}
kata_links <- sapply(
remDr$findElements('css', '.item-title a'),
function(x){ x$getElementAttribute('href')}) %>%
unlist()
kata_links
for(i in 1:3){
remDr$executeScript(paste('scroll(0,', i*100000, ');'))
Sys.sleep(10)
}
kata_links <- sapply(
remDr$findElements('css', '.item-title a'),
function(x){ x$getElementAttribute('href')}) %>%
unlist()
kata_links
for(i in 1:3){
remDr$executeScript(paste('scroll(0,', i*100000, ');'))
Sys.sleep(10)
}
page_source <- remDr$getPageSource()
page_source
html(page_source[[1]])
read_html(page_source[[1]])
read_html(page_source[[1]])$findElements('css', '.item-title a')
read_html(page_source[[2]])
read_html(page_source[[1]])
read_html(page_source[[1]][2])
read_html(page_source[[1]]) %>% html_nodes('.item-title')
read_html(page_source[[1]]) %>% html_nodes('.item-title a')
firstheight = remDr$executeScript(paste('return document.bodyh.scrollHeight'))
firstheight = remDr$executeScript(paste('return document.body.scrollHeight'))
firstheight
for(i in 1:3){
remDr$executeScript('window.scrollTo(0, document.body.scrollHeight);')
Sys.sleep(5)
}
newheight = remDr$executeScript('return document.body.scrollHeight')
newheight
for(i in 1:3){
remDr$executeScript('window.scrollTo(0, document.body.scrollHeight);')
Sys.sleep(15)
newheight <- remDr$executeScript('return document.body.scrollHeight')
}
newheight
for(i in 1:3){
webElem <- remDr$findElement('css', 'body')
webElem$sendKeysToElement(list(key='end'))
#  remDr$executeScript('window.scrollTo(0, document.body.scrollHeight);')
Sys.sleep(15)
newheight <- remDr$executeScript('return document.body.scrollHeight')
}
newheight
remDr$screenshot(display = T)
kata_links
remDr$close
pJS$stop()
pJS <- phantom()
sys.sleep(5)
remDr <- remoteDriver(browserName = 'phantomjs')
remDr$open()
remDr$navigate('http://www.codewars.com/kata')
#find the total number of recorded katas
tot_kata <- remDr$findElement(using = 'css', '.is-gray-text')$getElementText() %>%
unlist() %>%
str_extract('\\d+') %>%
as.numeric()
#there are about 30 katas per page reload
tot_pages <- (tot_kata/30) %>%
ceiling()
remDr$screenshot(display = T)
pJS <- phantom()
sys.sleep(5)
remDr <- remoteDriver(browserName = 'phantomjs')
remDr$open()
remDr$navigate('http://www.codewars.com/kata')
remDr$screenshot(display = T)
for(i in 1:3){
webElem <- remDr$findElement('css', 'body')
#  webElem$sendKeysToElement(list(key='end')) #doesn't work
remDr$executeScript('window.scrollTo(0, document.body.scrollHeight);') #doesn't work
Sys.sleep(60)
}
page_source <- remDr$getPageSource()
#find the total number of recorded katas
tot_kata <- remDr$findElement(using = 'css', '.is-gray-text')$getElementText() %>%
unlist() %>%
str_extract('\\d+') %>%
as.numeric()
#there are about 30 katas per page reload
tot_pages <- (tot_kata/30) %>%
ceiling()
kata_links <- sapply(
remDr$findElements('css', '.item-title a'),
function(x){ x$getElementAttribute('href')}) %>%
unlist()
remDr$close
pJS$stop()
kata_links
pJS <- phantom()
Sys.sleep(5)
remDr <- remoteDriver(browserName = 'phantomjs')
remDr$open()
remDr$navigate('http://www.codewars.com/kata')
remDr$screenshot(display = T)
for(i in 1:3){
webElem <- remDr$findElement('css', 'body')
#  webElem$sendKeysToElement(list(key='end')) #doesn't work
remDr$executeScript('window.scrollTo(0, document.body.scrollHeight);') #doesn't work
Sys.sleep(60)
}
page_source <- remDr$getPageSource()
#find the total number of recorded katas
tot_kata <- remDr$findElement(using = 'css', '.is-gray-text')$getElementText() %>%
unlist() %>%
str_extract('\\d+') %>%
as.numeric()
#there are about 30 katas per page reload
tot_pages <- (tot_kata/30) %>%
ceiling()
kata_links <- sapply(
remDr$findElements('css', '.item-title a'),
function(x){ x$getElementAttribute('href')}) %>%
unlist()
kata_links
remDr$close
pJS$stop()
remDr <- remoteDriver(browserName = 'chrome')
remDr$open()
pJS <- phantom()
Sys.sleep(5)
remDr <- remoteDriver(browserName = 'chrome')
remDr$open()
remDr$navigate('http://www.codewars.com/kata')
remDr$screenshot(display = T)
for(i in 1:3){
webElem <- remDr$findElement('css', 'body')
#  webElem$sendKeysToElement(list(key='end')) #doesn't work
remDr$executeScript('window.scrollTo(0, document.body.scrollHeight);') #doesn't work
Sys.sleep(30)
}
kata_links <- sapply(
remDr$findElements('css', '.item-title a'),
function(x){ x$getElementAttribute('href')}) %>%
unlist()
kata_links
remDr$close
pJS$stop()
wdman::selenium()
rsDriver()
startServer()
?rsDriver
rsDriver(browser = 'chrome')
rsDriver()
rsDriver(port = 4444)
rsDriver(port = 4444)
rsDriver(port = 4444L)
remDr <- remoteDriver(browserName = 'chrome')
remDr$open()
remDr$navigate('http://www.codewars.com/kata')
?remoteDriver
rsDriver(port = 4444L)
remDr <- remoteDriver()
remDr$open()
remDr$navigate('http://www.codewars.com/kata')
rsDriver(port = 4444L)
rsDriver(port = 4444L, browser = 'chrome')
remDr <- remoteDriver()
remDr$open()
remDr$navigate('http://www.codewars.com/kata')
remDr <- remoteDriver(browser = 'chrome')
remDr$open()
remDr$navigate('http://www.codewars.com/kata')
remDr$screenshot(display = T)
for(i in 1:3){
webElem <- remDr$findElement('css', 'body')
#  webElem$sendKeysToElement(list(key='end')) #doesn't work
remDr$executeScript('window.scrollTo(0, document.body.scrollHeight);') #doesn't work
Sys.sleep(30)
}
tot_kata <- remDr$findElement(using = 'css', '.is-gray-text')$getElementText() %>%
unlist() %>%
str_extract('\\d+') %>%
as.numeric()
tot_kata
kata_links <- sapply(
remDr$findElements('css', '.item-title a'),
function(x){ x$getElementAttribute('href')}) %>%
unlist()
kata_links
remDr$screenshot(display = T)
kata_links <- sapply(
remDr$findElements('css', '.item-title a'),
function(x){ x$getElementAttribute('href')}) %>%
unlist()
kata_links
remDr$findElements('css', '.item-title a')
remDr$findElements('css', '.item-title a')[[31]]
remDr$findElements('css', '.item-title a')[[30]]
kata_links
remDr
remDr %>% html_nodes('.item-title a')
page_source <- remDr$getPageSource()
html(page_source[1]) %>%
html_nodes('.item-title a') %>%
html_attr('href')
html(page_source[1]) %>%
html_nodes('.item-title a') %>%
html_attr('href')
page_source <- remDr$getPageSource()
html(page_source[1]) %>%
html_nodes('.item-title a') %>%
html_attr('href')
html(page_source[[1]]) %>%
html_nodes('.item-title a') %>%
html_attr('href')
for(i in 1:3){
webElem <- remDr$findElement('css', 'body')
remDr$executeScript('window.scrollTo(0, document.body.scrollHeight);') #doesn't work
Sys.sleep(60)
}
kata_vector <- html(remDr$getPageSource[[1]]) %>%
html_nodes('.item-title a') %>%
html_attr('href')
page_source <- remDr$getPageSource()
kata_vector <- html(page_source[[1]]) %>%
html_nodes('.item-title a') %>%
html_attr('href')
kata_vector
kata_links <- sapply(
remDr$findElements('css', '.item-title a'),
function(x){ x$getElementAttribute('href')}) %>%
unlist()
kata_links
kata_vector <- html(page_source[[1]]) %>%
html_nodes('.item-title a') %>%
html_attr('href') %>%
str_replace('/kata/', '')
kata_vector
remDr$close
remDr$close()
setwd("D:/Websites")
library(dplyr)
library(stringr)
train <- sample(nrow(iris), (nrow(iris) * .75))
clean_iris <- iris %>%
dplyr::select(-Species)
train_iris <- clean_iris[train,]
test_iris <- clean_iris[-train,]
train_iris <- iris[train,]
test_iris <- iris[-train,]
iris_CHC_model <- hclust(dist(clean_iris), method = 'complete')
iris_AHC_model <- hclust(dist(clean_iris), method = 'average')
iris_SHC_model <- hclust(dist(clean_iris), method = 'single')
plot(iris_CHC_model)
cut_iris_CHC <- cutree(iris_CHC_model, 3.75)
table(cut_iris_CHC, iris$Species)
plot(iris_AHC_model)
cut_iris_AHC <- cutree(iris_AHC_model, 1.5)
table(cut_iris_AHC, iris$Species)
plot(iris_AHC_model)
?abline
plot(iris_AHC_model)
abline(h= 1.5)
abline(h= 1.75)
plot(iris_AHC_model)
abline(h= 1.75)
abline(h= 1.8)
plot(iris_CHC_model)
abline(h=3.75)
plot(iris_AHC_model)
abline(h= 1.8)
abline(h= 1.85)
cut_iris_AHC <- cutree(iris_AHC_model, 1.85)
cut_iris_AHC
plot(iris_AHC_model)
abline(h= 1.85)
plot(iris_SHC_model)
cut_iris_CHC <- cutree(iris_CHC_model, 1)
cut_iris_SHC <- cutree(iris_SHC_model, 3.75)
cut_iris_SHC <- cutree(iris_SHC_model, 1)
cut_iris_SHC
iris_SHC_model <- hclust(dist(clean_iris), method = 'single')
iris_SHC_model
plot(iris_CHC_model)
cut_iris_CHC <- cutree(iris_CHC_model, 3)
table(cut_iris_CHC, iris$Species)
cut_iris_AHC <- cutree(iris_AHC_model, 3)
table(cut_iris_AHC, iris$Species)
cut_iris_SHC <- cutree(iris_SHC_model, 1)
table(cut_iris_SHC, iris$Species)
cut_iris_SHC <- cutree(iris_SHC_model, 3)
table(cut_iris_SHC, iris$Species)
table(cut_iris_CHC, iris$Species)
table(cut_iris_AHC, iris$Species)
table(cut_iris_SHC, iris$Species)
set.seed(1)
iris_KMC_model <- kmeans(clean_iris, 3, nstart = 20)
table(iris_KMC_model$cluster, iris$Species)
table(cut_iris_AHC, iris$Species)
summary(iris_pca_model)
iris_pca_model <- prcomp(clean_iris, scale=T)
summary(iris_pca_model)
iris_pca_model <- prcomp(clean_iris, scale=T)
summary(iris_pca_model)
plot(iris_pca_model)
pve <- 100*iris_pca_model$sdev^2/sum(iris_pca_model$sdev^2)
plot(pve)
plot(pve, type = 'o')
plot(cumsum(pve), type = 'o')
setwd("D:/Websites/beemyfriend.github.io/Articles")
library(caret)
train <- sample(nrow(iris), (nrow(iris) * .75))
train_iris <- iris[train,]
test_iris <- iris[-train,]
iris_nb_model <- train(Species~., data = train_iris, 'nb', trControl = trainControl(method = 'cv', number = 10))
iris_nb_model
prediction <- predict(iris_nb_model$finalModel, test_iris)
ed_guess <- prediction$class
table(ed_guess, test_species)
table(ed_guess, test_iris$Species)
train <- sample(nrow(iris), (nrow(iris) * .75))
train_iris <- iris[train,]
test_iris <- iris[-train,]
iris_nb_model <- train(Species~., data = train_iris, 'nb', trControl = trainControl(method = 'cv', number = 10))
prediction <- predict(iris_nb_model$finalModel, test_iris)
ed_guess <- prediction$class
table(ed_guess, test_iris$Species)
truth <- test_iris$Species
table(ed_guess, truth)
knitr::opts_chunk$set(echo = TRUE)
iris_svm_model <- svm(Species~., data = train_iris, kernel = 'linear', cost = 10)
detach(package:caret)
library(e1071)
iris_svm_model <- svm(Species~., data = train_iris, kernel = 'linear', cost = 10)
prediction <- predict(iris_svm_model, test_iris)
table(prediction, test_iris$Species)
library(caret)
iris_nb_model <- train(Species~., data = train_iris, 'nb', trControl = trainControl(method = 'cv', number = 10))
prediction <- predict(iris_nb_model$finalModel, test_iris)
prediction
prediction$class
detach(package:caret)
library(e1071)
iris_svm_model <- svm(Species~., data = train_iris, kernel = 'linear', cost = 10)
prediction <- predict(iris_svm_model, test_iris)
prediction
truth <- test_iris$Species
table(prediction, truth)
iris_svm_cmatrix <- table(prediction, truth)
iris_svm_cmatrix
table(truth, truth)
detach(package:e1071)
library(tree)
set.seed(1)
iris_tree_model <- tree(Species~., data = train_iris)
prediction <- predict(iris_tree_model, test_iris, type='class')
table(prediction, truth)
table(truth, truth)
iris_tree_cmatrix <- table(prediction, truth)
iris_tree_cmatrix
iris_rf_cmatrix <- table(prediction, truth)
iris_rf_cmatrix
library(randomForest)
set.seed(1)
iris_rf_model <- randomForest(Species~., data = iris, subset = train, importance = T)
prediction <- predict(iris_rf_model, test_iris)
iris_rf_cmatrix <- table(prediction, truth)
iris_rf_cmatrix
?train
iris_nb_model <- train(Species~., data = train_iris, 'nb', trControl = trainControl(method = 'cv', number = 10))
library(caret)
iris_nb_model <- train(Species~., data = train_iris, method = 'nb', trControl = trainControl(method = 'cv', number = 5))
prediction <- predict(iris_nb_model$finalModel, test_iris)
prediction <- prediction$class
truth <- test_iris$Species
iris_nb_cmatrix <- table(prediction, truth)
iris_nb_cmatrix
iris_nb_cmatrix[1,1] + iris_nb_cmatrix[2,2] + iris_nb_cmatrix[3,3]
iris_nb_cmatrix %>% sum()
iris_svm_cmatrix %>% sum()
iris_svm_cmatrix[1,1] + iris_svm_cmatrix[2,2] + iris_svm_cmatrix[3,3]
((iris_nb_cmatrix[1,1] + iris_nb_cmatrix[2,2] + iris_nb_cmatrix[3,3])/sum(iris_nb_cmatrix)) * 100
round(1.333, 2)
round(1.333, 4)
str(iris[-Species])
str(iris[-'Species'])
iris['Species']
iris[-c('Species')]
iris[!'Species']
iris
iris[4]
iris[5]
iris
iris[-5]
plot(iris_tree_model)
text(iris_tree_model, pretty=0)
plot(iris_tree_model)
text(iris_tree_model, pretty=0)
iris$Petal.Length < 2.45
iris$Species[iris$Petal.Length < 2.45]
?randomForest
plot(iris_KMC_model)
plot(x, col=(iris_KMC_model$cluster+1))
iris_KMC_model$cluster
iris_KMC_model$centers
plot(iris_KMC_model)
plot(iris_KMC_model$cluster)
iris
sample(unclassified_iris, nrow(unclassified_iris))
unclassified_iris <- iris[-5]
unclassified_iris <- iris[-5]
unclassified_iris <- sample(unclassified_iris, nrow(unclassified_iris))
nrow(unclass)
nrow(unclassified_iris)
unclassified_iris(sample(nrow(unclassified_iris), nrow(unclassified_iris)))
unclassified_iris <- iris[-5]
unclassified_iris <- unclassified_iris[sample(unclassified_iris, nrow(unclassified_iris)),]
unclassified_iris <- unclassified_iris[sample(nrow(unclassified_iris), nrow(unclassified_iris)),]
unclassified_iris
scramble_iris <- iris[sample(nrow(iris), nrow(iris)),]
unclassified_iris <- scramble[-5]
unclassified_iris <- scramble_iris[-5]
scramble_iris
set.seed(1)
iris_KMC_model <- kmeans(unclassified_iris, 3, nstart = 20)
table(iris_KMC_model$cluster, iris$Species)
plot(iris_KMC_model$cluster)
rD <- rsDriver(port = 4444L, browser = 'chrome')
library(RSelenium)
library(rvest)
library(stringr)
rD <- rsDriver(port = 4444L, browser = 'chrome')
remDr <- rD$client
rD <- rsDriver(port = 4444L, browser = 'chrome')
remDr <- rD$client
