mutate(earned = sapply(seq_along(data), function(i){
.$data[[i]] %>% filter(use == 'sold') %>% .$cost_earn[1]
}) %>% unnest()) %>%
mutate(lost = sapply(seq_along(data), function(i){
.$data[[i]] %>% filter(use == 'tasting') %>% .$cost_earn[1]
}) %>% unlist())
vendimia_buin <- vendimia_buin %>%
group_by(type) %>%
nest() %>%
mutate(earned = sapply(seq_along(data), function(i){
.$data[[i]] %>% filter(use == 'sold') %>% .$cost_earn[1]
}) %>% unlist()) %>%
mutate(lost = sapply(seq_along(data), function(i){
.$data[[i]] %>% filter(use == 'tasting') %>% .$cost_earn[1]
}) %>% unlist())
vendimia_buin
vendimia_buin$data[[1]]
vendimia_buin$data[[1]] %>% filter(use == 'tasting')
vendimia_buin$data[[1]] %>% filter(use == 'tasting') %>% .$cost_earn[1]
vendimia_buin$data[[1]] %>% filter(use == 'tasting') %>% .$cost_earn
vendimia_buin <- data.frame(type, sold, tasting, n_price, v_price)
vendimia_buin <- vendimia_buin %>%
group_by(sold, tasting) %>%
nest() %>%
gather(use, bottles, -data) %>%
unnest() %>%
mutate(cost_earn = sapply(seq_along(use), function(i){
if(.$use[i] == 'sold'){
.$bottles[i] * .$v_price[i]
} else if (.$use[i] == 'tasting') {
.$bottles[i] * .$n_price[i] * -1
}
}))
vendimia_buin <- vendimia_buin %>%
group_by(type) %>%
nest() %>%
mutate(earned = sapply(seq_along(data), function(i){
.$data[[i]] %>% filter(use == 'sold') %>% .$cost_earn
}) %>% unlist()) %>%
mutate(lost = sapply(seq_along(data), function(i){
.$data[[i]] %>% filter(use == 'tasting') %>% .$cost_earn
}) %>% unlist())
vendimia_buin
vendimia_buin <- vendimia_buin %>% mutate(delta = earned - lost)
vendimia_buin
vendimia_buin <- vendimia_buin %>% mutate(delta = earned + lost)
vendimia_buin
vendimia_buin %>% group_by(lost, delta, type) %>%
vendimia_buin %>% group_by(lost, delta, type) %>% gather(earning_type, money, -type)
vendimia_buin %>% group_by(lost, delta, type) %>% gather(earning_type, money, -c(type, data))
vendimia_buin  %>% gather(earning_type, money, -c(type, data))
vendimia_buin  %>% gather(earning_type, money, -c(type, data)) %>% ggplot(aes(earning_type, money)) + geom_col
vendimia_buin  %>% gather(earning_type, money, -c(type, data)) %>% ggplot(aes(earning_type, money)) + geom_col()
vendimia_buin  %>% gather(earning_type, money, -c(type, data)) %>% ggplot(aes( money, fill = earning_type)) + geom_col()
vendimia_buin  %>% gather(earning_type, money, -c(type, data)) %>% ggplot(aes( money, fill = earning_type)) + geom_bar()
vendimia_buin  %>% gather(earning_type, money, -c(type, data)) %>% ggplot(aes( earning_type, money)) + geom_bar()
vendimia_buin  %>% gather(earning_type, money, -c(type, data)) %>% ggplot(aes( earning_type, money)) + geom_col()
vendimia_buin  %>% gather(earning_type, money, -c(type, data)) %>% ggplot(aes( earning_type, money)) + geom_col(position = 'stack')
vendimia_buin  %>% gather(earning_type, money, -c(type, data)) %>% ggplot(aes(type, money)) + geom_col(position = 'stack')
vendimia_buin  %>% gather(earning_type, money, -c(type, data)) %>% ggplot(aes(type, money, fill = earning_type)) + geom_col()
vendimia_buin  %>% gather(earning_type, money, -c(type, data)) %>% filter(earning_type != earned) %>% ggplot(aes(type, money, fill = earning_type)) + geom_col()
vendimia_buin  %>% gather(earning_type, money, -c(type, data)) %>% filter(earning_type != 'earned') %>% ggplot(aes(type, money, fill = earning_type)) + geom_col()
vendimia_buin  %>% gather(earning_type, money, -c(type, data)) %>% filter(earning_type != 'earned') %>% mutate(lost = lost * -1) %>% ggplot(aes(type, money, fill = earning_type)) + geom_col()
vendimia_buin
ggplot(vendimia_buin) +
geom_col(aes(use, cost_earn)) +
facet_wrap(~type)
vendimia_buin <- data.frame(type, sold, tasting, n_price, v_price)
vendimia_buin <- vendimia_buin %>%
group_by(sold, tasting) %>%
nest() %>%
gather(use, bottles, -data) %>%
unnest() %>%
mutate(cost_earn = sapply(seq_along(use), function(i){
if(.$use[i] == 'sold'){
.$bottles[i] * .$v_price[i]
} else if (.$use[i] == 'tasting') {
.$bottles[i] * .$n_price[i] * -1
}
}))
ggplot(vendimia_buin) +
geom_col(aes(use, bottles)) +
facet_wrap(~type)
vendimia_buin <- vendimia_buin %>%
group_by(type) %>%
nest() %>%
mutate(earned = sapply(seq_along(data), function(i){
.$data[[i]] %>% filter(use == 'sold') %>% .$cost_earn
}) %>% unlist()) %>%
mutate(lost = sapply(seq_along(data), function(i){
.$data[[i]] %>% filter(use == 'tasting') %>% .$cost_earn
}) %>% unlist()) %>%
mutate(delta = earned + lost)
ggplot(vendimia_buin) +
geom_col(aes(use, cost_earn)) +
facet_wrap(~type)
vendimia_buin
vendimia_buin <- vendimia_buin %>%
group_by(type) %>%
nest() %>%
mutate(earned = sapply(seq_along(data), function(i){
.$data[[i]] %>% filter(use == 'sold') %>% .$cost_earn
}) %>% unlist()) %>%
mutate(lost = sapply(seq_along(data), function(i){
.$data[[i]] %>% filter(use == 'tasting') %>% .$cost_earn
}) %>% unlist() * -1) %>%
mutate(delta = earned + lost) %>%
gather(earning_type, money, -c(type, data)) %>%
filter(earning_type != 'earned')
vendimia_buin <- vendimia_buin %>%
group_by(sold, tasting) %>%
nest() %>%
gather(use, bottles, -data) %>%
unnest() %>%
mutate(cost_earn = sapply(seq_along(use), function(i){
if(.$use[i] == 'sold'){
.$bottles[i] * .$v_price[i]
} else if (.$use[i] == 'tasting') {
.$bottles[i] * .$n_price[i] * -1
}
}))
vendimia_buin2 <- vendimia_buin %>%
group_by(type) %>%
nest() %>%
mutate(earned = sapply(seq_along(data), function(i){
.$data[[i]] %>% filter(use == 'sold') %>% .$cost_earn
}) %>% unlist()) %>%
mutate(lost = sapply(seq_along(data), function(i){
.$data[[i]] %>% filter(use == 'tasting') %>% .$cost_earn
}) %>% unlist() * -1) %>%
mutate(delta = earned + lost) %>%
gather(earning_type, money, -c(type, data)) %>%
filter(earning_type != 'earned')
vendimia_buin <- data.frame(type, sold, tasting, n_price, v_price)
vendimia_buin <- vendimia_buin %>%
group_by(sold, tasting) %>%
nest() %>%
gather(use, bottles, -data) %>%
unnest() %>%
mutate(cost_earn = sapply(seq_along(use), function(i){
if(.$use[i] == 'sold'){
.$bottles[i] * .$v_price[i]
} else if (.$use[i] == 'tasting') {
.$bottles[i] * .$n_price[i] * -1
}
}))
vendimia_buin2 <- vendimia_buin %>%
group_by(type) %>%
nest() %>%
mutate(earned = sapply(seq_along(data), function(i){
.$data[[i]] %>% filter(use == 'sold') %>% .$cost_earn
}) %>% unlist()) %>%
mutate(lost = sapply(seq_along(data), function(i){
.$data[[i]] %>% filter(use == 'tasting') %>% .$cost_earn
}) %>% unlist() * -1) %>%
mutate(delta = earned + lost) %>%
gather(earning_type, money, -c(type, data)) %>%
filter(earning_type != 'earned')
vendimia_buin2
ggplot(vendimia_buin2) +
geom_col(aes(type, money, fill = earning_type))
vendimia_buin2 <- vendimia_buin %>%
group_by(type) %>%
nest() %>%
mutate(earned = sapply(seq_along(data), function(i){
.$data[[i]] %>% filter(use == 'sold') %>% .$cost_earn
}) %>% unlist()) %>%
mutate(lost = sapply(seq_along(data), function(i){
.$data[[i]] %>% filter(use == 'tasting') %>% .$cost_earn
}) %>% unlist() * -1) %>%
mutate(delta = earned - lost) %>%
gather(earning_type, money, -c(type, data)) %>%
filter(earning_type != 'earned')
ggplot(vendimia_buin2) +
geom_col(aes(type, money, fill = earning_type))
ggplot(vendimia_buin2) +
geom_col(aes(type, money, fill = earning_type)) +
scale_color_brewer(palette = c('brown, orange'))
ggplot(vendimia_buin2) +
geom_col(aes(type, money, fill = earning_type)) +
scale_color_brewer(palette = c('brown', 'orange'))
ggplot(vendimia_buin2) +
geom_col(aes(type, money, fill = earning_type), col = c('brown', orange))
ggplot(vendimia_buin2) +
geom_col(aes(type, money, fill = earning_type), col = c('brown', 'orange'))
ggplot(vendimia_buin2) +
geom_col(aes(type, money, fill = earning_type)) +
scale_fill_manual(c('brown', 'orange'))
ggplot(vendimia_buin2) +
geom_col(aes(type, money, fill = earning_type)) +
scale_fill_manual(values = c('brown', 'orange'))
ggplot(vendimia_buin2) +
geom_col(aes(type, money, fill = earning_type)) +
scale_fill_manual(values = c('#91bfdb', '#fc8d59'))
c('a', 'b', 'c') * 3
days <- c(rep('Friday', 3));
days
days <- c(rep('Friday', 3), rep('Saturday', 3), rep('Sunday', 3));
days
type <- rep(c('Cabernet Sauvignon', 'Sauvignon Blanc', 'Gasificado'), 3)
type
days <- rep(c('Friday', 'Saturday', 'Sunday'), 3)
days
type <- c(rep('Cabernet Sauvignon',3),rep('Sauvignon Blanc', 3), rep('Gasificado', 3))
type
vendimia_buin3 <- data.frame(type, days, bottles_sold, bottles_tasted)
bottles_sold <- c(25, 55, 27, 1, 7, 15, 4, 26, 9)
bottles_tasted <- c(12, 30, 16, 1, 5, 8, 2, 11, 11)
vendimia_buin3 <- data.frame(type, days, bottles_sold, bottles_tasted)
vendimia_buin3
gglot(vendimia_buin) +
geom_point(aes(bottles_tasted, bottles_sold))
ggplot(vendimia_buin) +
geom_point(aes(bottles_tasted, bottles_sold))
ggplot(vendimia_buin3) +
geom_point(aes(bottles_tasted, bottles_sold))
ggplot(vendimia_buin3) +
geom_smooth(aes(bottles_tasted, bottles_sold))
ggplot(vendimia_buin3, aes(bottles_tasted, bottles_sold)) +
geom_smooth() +
geom_point()
ggplot(vendimia_buin3, aes(bottles_tasted, bottles_sold)) +
geom_point() +
facet_wrap(~days)
ggplot(vendimia_buin3, aes(bottles_tasted, bottles_sold)) +
geom_point(aes(color = type)) +
facet_wrap(~days)
ggplot(vendimia_buin3, aes(bottles_tasted, bottles_sold)) +
geom_point(aes(color = type)) +
facet_wrap(~days) +
scale_fill_manual(values = c('#d95f02', '#7570b3', '#1b9e77'))
ggplot(vendimia_buin3, aes(bottles_tasted, bottles_sold)) +
geom_point(aes(color = type), size = 5) +
facet_wrap(~days) +
scale_fill_manual(values = c('#d95f02', '#7570b3', '#1b9e77'))
ggplot(vendimia_buin3, aes(bottles_tasted, bottles_sold)) +
geom_point(aes(color = type), size = 5) +
geom_smooth() +
facet_wrap(~days) +
scale_fill_manual(values = c('#d95f02', '#7570b3', '#1b9e77'))
ggplot(vendimia_buin3, aes(bottles_tasted, bottles_sold)) +
geom_smooth() +
geom_point(aes(color = type), size = 5) +
facet_wrap(~days) +
scale_fill_manual(values = c('#d95f02', '#7570b3', '#1b9e77'))
ggplot(vendimia_buin3, aes(bottles_tasted, bottles_sold)) +
geom_smooth() +
geom_point()
vendimia_buin3
ggplot(vendimia_buin3, aes(bottles_tasted, bottles_sold)) +
geom_point(aes(color = type), size = 5) +
facet_wrap(~days) +
scale_fill_manual(values = c('#d95f02', '#7570b3', '#1b9e77'))
ggplot(vendimia_buin2) +
geom_col(aes(type, money, fill = earning_type)) +
scale_fill_manual(values = c('#91bfdb', '#fc8d59'))
ggplot(vendimia_buin) +
geom_col(aes(use, bottles)) +
facet_wrap(~type)
vendimia_buin
vendimia_buin2
vendimia_buin2 %>% unnest()
vendimia_buin2 %>% unnest() %>% spread(use, cost_earn)
vendimia_buin2 %>% unnest()
vendimia_buin2 %>% unnest() %>% unite(bottles_cost_earn) %>%spread(use, cost_earn)
vendimia_buin2 %>% unnest() %>% unite(bottles_cost_earn)\
vendimia_buin2 %>% unnest() %>% unite(bottles_cost_earn)
vendimia_buin2 %>% unnest() %>% unite(bottles, cost_earn)
vendimia_buin2 %>% unnest() %>% unite(bottles_cost,bottles, cost_earn)
vendimia_buin2 %>% unnest() %>% unite(bottles_cost,bottles, cost_earn) %>% spread(use, bottles_cost)
vendimia_buin2 %>%
unnest() %>%
unite(bottles_cost,bottles, cost_earn) %>%
spread(use, bottles_cost) %>%
spread(earning_type, money)
?unite
vendimia_buin2 %>%
unnest() %>%
unite(bottles_cost,bottles, cost_earn) %>%
spread(use, bottles_cost) %>%
spread(earning_type, money) %>%
select(-lost) %>%
separate(sold)
vendimia_buin2 %>%
unnest() %>%
unite(bottles_cost,bottles, cost_earn) %>%
spread(use, bottles_cost) %>%
spread(earning_type, money) %>%
select(-lost) %>%
separate(sold, 'bottles_sold', 'money_gained')
vendimia_buin2 %>%
unnest() %>%
unite(bottles_cost,bottles, cost_earn) %>%
spread(use, bottles_cost) %>%
spread(earning_type, money) %>%
select(-lost) %>%
separate(sold, c('bottles_sold', 'money_gained'))
vendimia_buin2 %>%
unnest() %>%
unite(bottles_cost,bottles, cost_earn) %>%
spread(use, bottles_cost) %>%
spread(earning_type, money) %>%
select(-lost) %>%
separate(sold, c('bottles_sold', 'money_gained')) %>%
sperate(tasting, c('bottles_tasted', 'money_lost'))
vendimia_buin2 %>%
unnest() %>%
unite(bottles_cost,bottles, cost_earn) %>%
spread(use, bottles_cost) %>%
spread(earning_type, money) %>%
select(-lost) %>%
separate(sold, c('bottles_sold', 'money_gained')) %>%
separate(tasting, c('bottles_tasted', 'money_lost'))
vendimia_buin2 %>%
unnest() %>%
unite(bottles_cost,bottles, cost_earn) %>%
spread(use, bottles_cost) %>%
spread(earning_type, money) %>%
select(-lost) %>%
separate(sold, c('bottles_sold', 'money_gained')) %>%
separate(tasting, c('bottles_tasted', 'money_lost'))
ggplot(vendimia_buin3, aes(bottles_tasted, bottles_sold)) +
geom_point(aes(color = type), size = 5) +
facet_wrap(~days) +
scale_fill_manual(values = c('#d95f02', '#1b9e77','#7570b3' ))
ggplot(vendimia_buin3, aes(bottles_tasted, bottles_sold)) +
geom_point(aes(color = type), size = 5) +
facet_wrap(~days) +
scale_color_manual(values = c('#d95f02', '#7570b3', '#1b9e77'))
price_check <- data.frame(num_bottles)
num_bottles <- c(1:300)
price_check <- data.frame(num_bottles)
price_check
price_check <- data.frame(num_bottles) %>%
mutate(normal_price = num_bottles * 2.5) %>%
mutate(vendimia_price = num_bottles * 3.5)
price_check
ggplot(price_check) +
geom_line(aes(normal_price))
ggplot(price_check) +
geom_line(aes(num_bottles, normal_price))
ggplot(price_check) +
geom_line(aes(num_bottles, normal_price)) +
geom_line(aes(num_bottles, vendimia_price))
ggplot(price_check) +
geom_line(aes(num_bottles, normal_price), color = '#d95f02') +
geom_line(aes(num_bottles, vendimia_price), color = '#1b9e77')
ggplot(price_check, size = 3) +
geom_line(aes(num_bottles, normal_price), color = '#d95f02') +
geom_line(aes(num_bottles, vendimia_price), color = '#1b9e77')
ggplot(price_check, width =3) +
geom_line(aes(num_bottles, normal_price), color = '#d95f02') +
geom_line(aes(num_bottles, vendimia_price), color = '#1b9e77')
ggplot(price_check, width = 6) +
geom_line(aes(num_bottles, normal_price), color = '#d95f02') +
geom_line(aes(num_bottles, vendimia_price), color = '#1b9e77')
ggplot(price_check, size = 6) +
geom_line(aes(num_bottles, normal_price), color = '#d95f02') +
geom_line(aes(num_bottles, vendimia_price), color = '#1b9e77')
ggplot(price_check) +
geom_line(aes(num_bottles, normal_price), color = '#d95f02', size = 5) +
geom_line(aes(num_bottles, vendimia_price), color = '#1b9e77')
ggplot(price_check) +
geom_line(aes(num_bottles, normal_price), color = '#d95f02', size = 3) +
geom_line(aes(num_bottles, vendimia_price), color = '#1b9e77', size = 3)
ggplot(price_check) +
geom_line(aes(num_bottles, normal_price), color = '#d95f02', size = 2) +
geom_line(aes(num_bottles, vendimia_price), color = '#1b9e77', size = 2)
price_check
?geom_vline
ggplot(price_check) +
geom_line(aes(num_bottles, normal_price), color = '#d95f02', size = 2) +
geom_line(aes(num_bottles, vendimia_price), color = '#1b9e77', size = 2) +
geom_vline(xintercept = 100)
ggplot(price_check) +
geom_line(aes(num_bottles, normal_price), color = '#d95f02', size = 2) +
geom_line(aes(num_bottles, vendimia_price), color = '#1b9e77', size = 2) +
geom_vline(xintercept = 100, ylim(100, 400))
ggplot(price_check) +
geom_line(aes(num_bottles, normal_price), color = '#d95f02', size = 2) +
geom_line(aes(num_bottles, vendimia_price), color = '#1b9e77', size = 2) +
geom_vline(xintercept = 100) +
geom_vline(xintercept = 200)
price_check <- data.frame(num_bottles) %>%
mutate(normal_price = num_bottles * 2.5) %>%
mutate(vendimia_price = num_bottles * 3.5) %>%
mutate(delta = vendimia_price - num_bottles)
price_check[100]
price_check[,100]
price_check[100,]
price_check <- data.frame(num_bottles) %>%
mutate(normal_price = num_bottles * 2.5) %>%
mutate(vendimia_price = num_bottles * 3.5) %>%
mutate(delta = vendimia_price - normal_price) %>%
mutate(delta_normal_bottles = delta/2.5)
price_check[100,]
price_check[200,]
vendimia_buin2
vendimia_buin
100/2.500
vendimia_buin %>% filter(use == 'tasting) %>% .$cost_earn %>% sum()
vendimia_buin %>% filter(use == 'tasting) %>% .$cost_earn %>% sum()
vendimia_buin %>% filter(use == 'tasting') %>% .$cost_earn %>% sum()
vendimia_buin %>% filter(use == 'tasting') %>% .$cost_earn %>% sum() * -1
vendimia_buin3
knitr::opts_chunk$set(echo = TRUE)
vendimia_buin3 %>% knitr::kable()
5 + 5
data.frame(c(1,2,3), c('a', 'b', 'c'))
bud <- data.frame(x = c(1,2,3), y = c(3,2,1))
bud
min_ <- c(10000, 1000, 840, 840, 200, 0)
sum(min_)
max_ <- c(15000, 3000, 2100,840, 500, 2000)
sum(max_)
60 * 14
80 * 14
60 * 14
70 * 14
80 * 14
sum(c(10000, 1000, 840, 1120, 500, 0))
c(15000, 3000, 2100, 1120, 1000, 2000)
sum(c(15000, 3000, 2100, 1120, 1000, 2000))
80 * 14
250 * 14
15000 + 3000 + 3,500 + 1120 + 1000 + 2000
15000 + 3000 + 3500 + 1120 + 1000 + 2000
80 * 14
names_import <- c('haven::read_spss', 'haven::read_sas',
'readxl::read_excel')
desc_import <- c('Convert SPSS data into R dataframe', 'Convert SAS data into R dataframe', 'Convert Excel data into R data.frame')
tools_import <- data.frame(Tool = names_import, Description = desc_import)
desc_import
tools_import
?knitr::kable
names_clean <- c('tidyr::separate', 'tidyr::gather', 'tidyr::nest', 'dplyr::mutate', 'dplyr::filter', 'dplyr::select', 'dplyr::left_join', 'stringr::str_detect', 'stringr::str_extract', 'stringr::str_replace', 'base::sapply' )
desc_clean <- c('Expand single character column to multiple columns', 'Takes multiple columns and collapse them into key-value pairs', 'Creates a list of dataframes containing all the nested variables', 'Adds new variables while preserves existing ones', 'Return rows with matching conditions', 'Keeps only the queried variables', 'Join two dataframes by matching variables', 'Detect substring and return boolean', 'Extract and return substring', 'Replace substring with declared string', 'Create a vector as a result of a row-wise function')
tools_clean <- data.frame(Tool = names_clean, Description = desc_clean)
tools_clean
names_plot <- c('ggplot2')
desc_plot <- c('Implementation of the "Grammar of Graphics" in R')
tools_plot <- data.frame(Tool = names_plot, Description = desc_plot)
tools_plot
names_inte <- c('shiny', 'd3.js')
desc_inte <- c('Create interactive graphics in R', 'NOT AN R LIBRARY: Create interactive graphics in javascript.')
tools_inte <- data.frame(Tool = names_inte, Description = desc_inte)
tools_iinte
tools_ii\nte
tools_inte
library(tidyverse)
library(stringr)
setwd('d://Websites/beemyfriend.github.io/Projects/')
timss_2015 <- read_tsv('TIMSS_2015_NO_BM.tsv')
timss_2015 <- read_tsv('TIMSS_2015_NO_BM.tsv')
names(timss_2015)
n_bins = 25
timss_2015 <- timss_2015 %>%
select(-c(country_mean_correct_ratio, students_per_question, students_per_question_female, students_per_question_male,
dominant_gender))
timss_2015 <- timss_2015 %>%
mutate(gender_bins = cut(diff_male_female, n_bins))
x <- timss_2015 %>%
group_by(country, gender_bins) %>%
nest
for(i in 1:nrow(x)){
x$data[[i]] = x$data[[i]] %>% arrange(correct_ratio_per_question)
x$data[[i]]$gender_bins_order = 1:nrow(x$data[[i]])
}
x <- x %>% unnest()
x <- x %>%
group_by(country, correct_ratio_per_question_range) %>%
nest
for(i in 1:nrow(x)){
x$data[[i]] = x$data[[i]] %>% arrange(diff_male_female)
x$data[[i]]$correct_ratio_per_question_range_order = 1:nrow(x$data[[i]])
}
x <- x %>% unnest()
sm_hist_correct <- x %>%
mutate(correct_bins = cut(correct_ratio_per_question, n_bins)) %>%
group_by(country, correct_bins) %>%
nest() %>%
mutate(
correct_bins_lead = correct_bins %>%
str_extract('\\-?\\d.\\d+') %>%
as.numeric()) %>%
mutate(
correct_count = sapply(seq_along(1:nrow(.)), function(i){
.$data[[i]] %>% nrow()
})
)
sm_hist_gender <- x %>%
group_by(country, gender_bins) %>%
nest() %>%
mutate(
gender_bins_lead = gender_bins %>%
str_extract('\\-?\\d.\\d+') %>%
as.numeric()) %>%
mutate(
gender_count = sapply(seq_along(1:nrow(.)), function(i){
.$data[[i]] %>% nrow()
})
)
sm_hist_gender %>% arrange(desc(gender_bins_lead)) %>% .$gender_bins
sm_hist_gender %>% arrange(desc(gender_bins_lead)) %>% .$gender_bins %>% unique()
correct_bins <- sm_hist_correct %>% arrange(correct_bins_lead) %>% .$correct_bins %>% unique()
correct_bins
hist_bins <- data.frame(correct_bins, hist_bins)
hist_bins <- data.frame(correct_bins, gender_bins)
gender_bins <- sm_hist_gender %>% arrange(desc(gender_bins_lead)) %>% .$gender_bins %>% unique()
hist_bins <- data.frame(correct_bins, gender_bins)
hist_bins
write_tsv(hist_bins, 'hist_bins.tsv')
